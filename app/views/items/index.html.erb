<% content_for :contents do %>
    <!-- <%= form_authenticity_token %> -->
    <div class="row">
        <div class="col-sm">
            <button type="button" class="btn btn-primary" ng-click="addItem()">
                Add Items
            </button>
        </div>
    </div>
    <br>
    <div class="row">
        <div class="col-sm">
            <table class="table table-bordered">
                <thead>
                    <th style="text-align: center">Item Name</th>
                    <th style="text-align: center">Category</th>
                    <th style="text-align: center">Subcategory</th>
                    <th style="text-align: center">SRP</th>
                    <th style="text-align: center">DP</th>
                    <th style="text-align: center"></th>
                </thead>
                <tbody>
                    <tr ng-repeat="(index,item) in items" ng-cloak>
                        <td style="text-align: center">{{ item.name }}</td>
                        <td style="text-align: center">{{ item.category }}</td>
                        <td style="text-align: center">{{ item.subcategory }}</td>
                        <td style="text-align: center">{{ item.retail_price|currency:"" }}</td>
                        <td style="text-align: center">{{ item.dealers_price|currency:"" }}</td>
                        <td style="text-align: center">
                            <a href="javascript:void(0);" ng-click="editItem(item,index)" class="btn btn-primary">Edit</a>
                            <a href="javascript:void(0);" ng-click="deleteItem(item,index)" class="btn btn-danger">Delete</a>
                        </td>
                    </tr>
                </tbody>
                <tfoot>
                    <tr ng-if="items | isEmpty">
                        <td colspan="20" style="text-align: center;">
                            <h1 ng-if="loading">
                                <img src="/images/loading.gif" style="height: 70px;">
                                <br> LOADING
                            </h1>
                            <h1>
                                <span ng-if="!loading" ng-cloak>NO DATA</span>
                                <span ng-if="loading" ng-cloak></span>
                            </h1>
                        </td>
                    </tr>
                    <tr ng-if="(items | isEmpty) && loading" ng-cloak>
                        <th colspan="20"></th>
                    </tr>
                </tfoot>
            </table>
            <div ng-bind-html="pagination" class="d-flex justify-content-center" ng-cloak></div>
        </div>
    </div>
<% end %>
<% content_for :modals do %>

<!-- The Modal -->
<div class="modal fade" id="item-modal">
<div class="modal-dialog">
<div class="modal-content">

    <!-- Modal Header -->
    <div class="modal-header">
        <h4 class="modal-title">ADD ITEMS</h4>
        <button type="button" class="close" data-dismiss="modal">&times;</button>
    </div>

    <!-- Modal body -->
    <div class="modal-body">
        <form id="item-form" ng-submit="submitItemForm()">
            <div class="form-group">
                <label for="name">Item Name</label>
                <input type="text" class="form-control" id="name" aria-describedby="name" placeholder="Enter item name" ng-model="formData.name">
                <small id="itemName" class="form-text text-muted"></small>
            </div>
            <div class="form-group">
                <label for="category">Item Category</label>
                <input type="text" class="form-control" id="category" aria-describedby="category" placeholder="Enter item category" ng-model="formData.category">
                <small id="category" class="form-text text-muted"></small>
            </div>
            <div class="form-group">
                <label for="subcategory">Item Subcategory</label>
                <input type="text" class="form-control" id="subcategory" aria-describedby="subcategory" placeholder="Enter item subcategory"
                    ng-model="formData.subcategory">
                <small id="subcategory" class="form-text text-muted"></small>
            </div>
            <div class="form-group">
                <label for="retail_price">Suggested Retail Price</label>
                <input type="number" step="0.01" class="form-control" id="retail_price" aria-describedby="retail_price" placeholder="Enter suggested retail price"
                    ng-model="formData.retail_price">
                <small id="retail_price" class="form-text text-muted"></small>
            </div>
            <div class="form-group">
                <label for="dealers_price">Dealers Price</label>
                <input type="number" step="0.01" class="form-control" id="dealers_price" aria-describedby="dealers_price" placeholder="Enter dealers price"
                    ng-model="formData.dealers_price">
                <small id="dealers_price" class="form-text text-muted"></small>
            </div>
        </form>
    </div>

    <!-- Modal footer -->
    <div class="modal-footer">
        <button type="submit" class="btn btn-primary" form="item-form">Submit</button>
        <button type="button" class="btn btn-danger" data-dismiss="modal">Close</button>
    </div>

</div>
</div>
</div>
<% end %>
<% content_for :js do %>
<script>
    app.controller('mainController', function ($scope, $http, $sce, $window) {
        $scope.firstName = moment().format();
        $scope.lastName = "Doe";
        $scope.formData = {};
        $scope.formErrors = {};
        $scope.pagination = "";
        $scope.formType = "create";
        $scope.selectedIndex = null;

        $(document).on('click', '.pagination li a', function (e) {
            e.preventDefault();
            $scope.getItems(e.target.href);
        });

        $scope.getItems = function (url_string) {
            url_string = (typeof url_string !== 'undefined') && url_string !== "" ? url_string : "/items/list";
            $scope.items = [];
            $scope.loading = true;
            $scope.pagination = "";
            $http({
                method: "GET",
                url: url_string,
            }).then(function mySuccess(response) {
                $scope.loading = false;
                $scope.items = response.data.result.data;
                $scope.pagination = $('<textarea />').html(response.data.result.pagination).text();
            }, function (rejection) {
                console.log(rejection);
                $scope.loading = false;
                if (rejection.status != 422) {
                    request_error(rejection.status);
                } else if (rejection.status == 422) {
                    console.log(rejection.statusText);
                }
            });
        }


        $scope.submitItemForm = function () {
            if($scope.formType == 'update'){
                $scope.updateItem();
            }else{
                $scope.createItem();
            }
        }

        $scope.createItem = function() {
            $scope.formErrors = {};
            $scope.submit = true;
            $http({
                method: 'POST',
                url: "/items",
                data: $.param({ formData: $scope.formData })
            }).then(function (response) {
                $scope.submit = false;
                $scope.items.unshift(response.data);
                $.notify('An Item has been added.');
            }, function (rejection) {
                if (rejection.status != 422) {
                    request_error(rejection.status);
                } else if (rejection.status == 422) {
                    var errors = rejection.data;
                    $scope.formErrors = errors;
                }
                $scope.submit = false;
            });
        }
        $scope.updateItem = function() {
            $scope.formErrors = {};
            $scope.submit = true;
            $http({
                method: 'PUT',
                url: "/items/"+$scope.formData.id,
                data: $.param({ formData: $scope.formData })
            }).then(function (response) {
                $scope.submit = false;
                $scope.items[$scope.selectedIndex] = response.data;
                $scope.formData = {};
                $("#item-modal").modal('hide');
                $.notify('A Bidder has been added.');
            }, function (rejection) {
                if (rejection.status != 422) {
                    request_error(rejection.status);
                } else if (rejection.status == 422) {
                    var errors = rejection.data;
                    $scope.formErrors = errors;
                }
                $scope.submit = false;
            });
        }
        $scope.destroyItem = function() {
            $scope.formErrors = {};
            $scope.submit = true;
            $http({
                method: 'DELETE',
                url: "/items/"+$scope.formData.id,
            }).then(function (response) {
                $scope.submit = false;
                $scope.items.splice($scope.selectedIndex, 1);
                $.notify('An Item has been deleted.');
            }, function (rejection) {
                if (rejection.status != 422) {
                    request_error(rejection.status);
                } else if (rejection.status == 422) {
                    var errors = rejection.data;
                    $scope.formErrors = errors;
                }
                $scope.submit = false;
            });
        }
        $scope.addItem = function () {
            $("#item-modal").modal('show');
            $scope.formData = {};
            $scope.formType = "create";
            $scope.selectedIndex = null;
        }
        $scope.editItem = function(data,index) {
            angular.copy(data, $scope.formData);
            $("#item-modal").modal('show');
            $scope.selectedIndex = index;
            $scope.formType = "update";
        }
        $scope.deleteItem = function(data,index) {
            angular.copy(data, $scope.formData);
            $scope.selectedIndex = index;
            $scope.destroyItem();
        }
        $scope.getItems();
    });
</script>
<% end %>